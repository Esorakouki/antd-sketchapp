#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const cheerio = require('cheerio');
const esformatter = require('esformatter');
esformatter.register(require('esformatter-jsx'));

const htmlStr = fs.readFileSync(path.join(__dirname, '..', 'demo', 'sample.html'), 'utf-8');
const $ = cheerio.load(htmlStr);

const requireList = [];
let indexStr = `
// Generated by 'transfrom'
/* eslint-disable */
`;

Array.from($('.icon-item')).forEach((el) => {
  const svgDom = $(el).find('.icon');
  let iconName = $(el)
    .find('.icon-code-show')
    .html()
    .trim()
    .replace('icon-', '');

  svgDom.attr('name', iconName);
  svgDom.removeAttr('style');
  svgDom.removeAttr('p-id');
  svgDom.attr('width', '16');
  svgDom.attr('height', '16');
  svgDom.attr('fill', '#666');

  let svgStr = $.html(svgDom);
  svgStr = svgStr
    .replace('<svg ', '<Svg ')
    .replace('</svg>', '</Svg>')
    .replace(/<path\s/g, '<Path ')
    .replace('width="16"', ' width={props.width || 16}')
    .replace('height="16"', ' height={props.height || 16}')
    .replace('fill="#666"', ' fill={props.fill || "#666"}');

  if (iconName.indexOf('1') === iconName.length - 1) {
    iconName = iconName.slice(0, iconName.length - 1);
  }

  iconName = iconName.toLowerCase().replace(/-/g, '');

  if (requireList.indexOf(iconName) === -1) {
    // 防止重复
    requireList.push(iconName);

    indexStr += `
      import ${`__${iconName.replace(/-/g, '_')}`} from './items/${iconName}';
    `;

    fs.writeFileSync(
      `${path.join(__dirname, '..', 'items')}/${iconName}.js`,
      esformatter.format(`
        // Generated by 'transfrom'
        /* eslint-disable */
        import React from 'react';
        import { Svg } from 'react-sketchapp';
        const { Path } = Svg;
        export default (props) => (
          ${svgStr}
        )
      `)
    );
  }
});

indexStr += '\n';
indexStr += `
  export default {
    ${requireList.map((iconName) => {
    return `\n${iconName}: ${`__${iconName.replace(/-/g, '_')}`}`;
  })}
  }
  `;

fs.writeFileSync(path.join(__dirname, '..', 'icons.js'), esformatter.format(indexStr));
